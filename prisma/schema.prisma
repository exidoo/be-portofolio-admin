// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


// Model untuk Authentication/User (Simplified untuk single user)
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String   // Wajib, tidak optional
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

// Model untuk Home Section
model Home {
  id          String   @id @default(cuid())
  title       String
  subtitle    String
  description String
  heroImage   String?   
  ctaText     String?
  ctaLink     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("home")
}

// Model untuk Featured Projects di Home Section
model FeaturedProject {
  id          String   @id @default(cuid())
  title       String
  shortDescription String
  thumbnail   String   
  route       String   
  order       Int      @default(0) 
  workId      String?  
  work        Work?    @relation(fields: [workId], references: [id], onDelete: SetNull)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("featured_projects")
}

// Model untuk About Section
model About {
  id           String   @id @default(cuid())
  title        String
  description  String
  profileImage String?   // URL ke gambar profil
  resumeUrl    String?  // URL ke file CV/Resume
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relasi ke SocialMedia dan Experience
  socialMedias SocialMedia[]
  experiences  Experience[]
  skills       Skill[]

  @@map("about")
}

model SocialMedia {
  id      String @id @default(cuid())
  name    String
  url     String
  icon    String? 
  aboutId String

  about About @relation(fields: [aboutId], references: [id], onDelete: Cascade)

  @@map("social_media")
}

model Experience {
  id          String   @id @default(cuid())
  company     String
  position    String
  description String?
  startDate   DateTime
  endDate     DateTime?
  current     Boolean  @default(false)
  aboutId     String

  about About @relation(fields: [aboutId], references: [id], onDelete: Cascade)

  @@map("experiences")
}

// Model Skill yang disederhanakan
model Skill {
  id        String   @id @default(cuid())
  name      String   
  aboutId   String
  icon      String?
  about About @relation(fields: [aboutId], references: [id], onDelete: Cascade)

  @@map("skills")
}

// Model untuk Work/Portfolio Section
model Work {
  id           String   @id @default(cuid())
  title        String
  description  String
  content      String?  
  imageUrl     String?   
  category     String
  technologies String[] 
  projectUrl   String?  
  githubUrl    String?  
  featured     Boolean  @default(false)
  published    Boolean  @default(false)
  order        Int      @default(0) // Untuk mengurutkan tampilan
  slug         String?   @unique // Slug untuk route URL
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  publishedAt  DateTime?

  // Relasi ke GalleryImage
  gallery GalleryImage[]

  // Relasi ke FeaturedProject (optional)
  featuredIn FeaturedProject[]

  @@map("works")
}

model GalleryImage {
  id     String @id @default(cuid())
  url    String?
  alt    String?
  workId String

  work Work @relation(fields: [workId], references: [id], onDelete: Cascade)

  @@map("gallery_images")
}

// Model untuk Contact Section
model Contact {
  id           String   @id @default(cuid())
  email        String
  phone        String?
  address      String?
  mapEmbedUrl  String?  // URL embed map (Google Maps, dll)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("contact")
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("contact_messages")
}

// Model untuk Site Settings (opsional)
model SiteSetting {
  id    String @id @default(cuid())
  key   String @unique
  value String

  @@map("site_settings")
}